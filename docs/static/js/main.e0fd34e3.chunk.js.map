{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/CardItem.js","componentes/GridCard.js","hooks/useFetchGifs.js","componentes/GifApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","htmlFor","onChange","target","value","type","id","getGifs","category","a","url","fetch","hhtpRequest","json","data","gifs","map","gif","title","images","downsized_medium","CardItem","des","style","width","src","alt","GridCard","loading","state","setState","useEffect","setTimeout","then","useFetchGifs","role","GifApp","cat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0fd34e3.chunk.js","sourcesContent":["import { useState } from \"react\"\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 0) {\r\n            setCategory((cats) => [inputValue, ...cats])\r\n            setInputValue(\"\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"category\" className=\"form-label\">Categoria</label>\r\n                    <input onChange={handleInputChange} value={inputValue} type=\"text\" className=\"form-control\" id=\"category\" aria-describedby=\"categoryHelp\"/>\r\n                    <div id=\"categoryHelp\" className=\"form-text\">Escribe una categoria para buscar...</div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const apiKey = 'jCmvCXa60Ekh1fyuTpnhYESkqV8kgU72'\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${category}&limit=8`\r\n    const hhtpRequest = await fetch(url)\r\n    const {data} = await hhtpRequest.json()\r\n    const gifs = data.map((gif) => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs\r\n}","export const CardItem = ({id, title, url, des}) => {\r\n    return(\r\n        <>\r\n            <div className=\"col\">\r\n                <div className=\"card\" style={{width: \"18rem\"}}>\r\n                    <img src={url} className=\"card-img-top\" alt={id}/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{title}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {CardItem} from './CardItem'\r\n\r\nexport const GridCard = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category)\r\n\r\n\r\n    return(\r\n        <>\r\n            {\r\n                loading ?\r\n                (   \r\n                    <>\r\n                        <h3>{category}</h3>\r\n                        <div className=\"row row-cols-sm-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n                            {\r\n                                data.map(({id, title, url, des}) => {\r\n                                    return(\r\n                                        <CardItem key={id} id={id} title={title} url={url} des={des}/>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"spinner-border text-primary\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            getGifs(category).then((gifs) => \r\n                setState({\r\n                    data: gifs,\r\n                    loading: true\r\n                })\r\n            )\r\n        }, 3000);\r\n    }, [category])\r\n\r\n    return state\r\n}","import { useState } from 'react'\r\n\r\nimport { AddCategory } from './AddCategory'\r\nimport {GridCard} from './GridCard'\r\n\r\nexport const GifApp = () => {\r\n    const [category, setCategory] = useState([''])\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"p-5 my-4 bg-dark bg-gradientshadow-lg text-light rounded-3\">\r\n                            <div className=\"container-fluid py-5\">\r\n                                <h1 className=\"display-5 fw-bold\">Gif App</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <AddCategory setCategory={setCategory}/> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        {\r\n                            category.map((cat) => {\r\n                                return(\r\n                                    <GridCard key={cat} category={cat}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport {GifApp} from './componentes/GifApp'\r\n\r\nReactDOM.render(<GifApp/>, document.getElementById('root'))"],"sourceRoot":""}